HTMl database:

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs" Inherits="Practical_Test_Solved_042.WebForm1" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <asp:GridView ID="gvstudent" runat="server" OnRowDataBound="gvstudent_OnRowDataBound" OnSelectedIndexChanged="gvstudent_SelectedIndexChanged"></asp:GridView>
           ID: <asp:DropDownList ID="ddlid" runat="server" AutoPostBack="true" OnSelectedIndexChanged="ddlid_SelectedIndexChanged" ></asp:DropDownList>
            <br />
           ID: <asp:TextBox ID="txt_id" runat="server" ></asp:TextBox>
            <br />
            
            Name:<asp:TextBox ID="txt_name" runat="server" ></asp:TextBox>
            <asp:RegularExpressionValidator ID="regexvname" runat="server" Display="Dynamic" ControlToValidate="txt_name" ValidationExpression="\w{1,12}" Text="Not More Than 12 Characters"></asp:RegularExpressionValidator>
            <br />
            Program:<asp:TextBox ID="txt_prog" runat="server" ></asp:TextBox>
            <asp:RegularExpressionValidator ID="regexvprog" runat="server" Display="Dynamic" ControlToValidate="txt_prog" ValidationExpression="^MSIT|MCA$" Text="Either MSIT or MCA"></asp:RegularExpressionValidator>
            <br />
            Semester:<asp:TextBox ID="txt_sem" runat="server" ></asp:TextBox>
            <asp:RangeValidator ID="rngvsem" runat="server" Display="Dynamic" ControlToValidate="txt_sem" MinimumValue="1" MaximumValue="4" Type="Integer" Text="Only From 1 to 4"></asp:RangeValidator>
            <br />
            Sub1 Marks:<asp:TextBox ID="txt_sub1marks" runat="server" ></asp:TextBox>
            <asp:RegularExpressionValidator ID="regexsub1" runat="server" Display="Dynamic" ControlToValidate="txt_sub1marks" ValidationExpression="\d*" Text="Only Digit(s)"></asp:RegularExpressionValidator>
            <asp:RangeValidator ID="rngsub1" runat="server" Display="Dynamic" ControlToValidate="txt_sub1marks" MinimumValue="0" MaximumValue="100" Type="Integer" Text="Between 0 to 100"/>
            <br />
            Sub2 Marks:<asp:TextBox ID="txt_sub2marks" runat="server" ></asp:TextBox>
            <asp:RegularExpressionValidator ID="regexsub2" runat="server" Display="Dynamic" ControlToValidate="txt_sub2marks" ValidationExpression="\d*" Text="Only Digit(s)"></asp:RegularExpressionValidator>
            <asp:RangeValidator ID="rngsub2" runat="server" Display="Dynamic" ControlToValidate="txt_sub2marks" MinimumValue="0" MaximumValue="100" Type="Integer" Text="Between 0 to 100"/>
            <br />
            Sub3 Marks:<asp:TextBox ID="txt_sub3marks" runat="server" ></asp:TextBox>
            <asp:RegularExpressionValidator ID="regexsub3" runat="server" Display="Dynamic" ControlToValidate="txt_sub3marks" ValidationExpression="\d*" Text="Only Digit(s)"></asp:RegularExpressionValidator>
            <asp:RangeValidator ID="rngsub3" runat="server" Display="Dynamic" ControlToValidate="txt_sub3marks" MinimumValue="0" MaximumValue="100" Type="Integer" Text="Between 0 to 100"/>
            <br />
            &nbsp;&nbsp;&nbsp;
            <asp:Button ID="btn_Insert" Text="Insert" runat="server" OnClick="btn_Insert_Click" />
            &nbsp;&nbsp;&nbsp;
            <asp:Button ID="btn_Update" Text="Update" runat="server" OnClick="btn_Update_Click" />
            &nbsp;&nbsp;&nbsp;
            <asp:Button ID="btn_Delete" Text="Delete" runat="server" OnClick="btn_Delete_Click" />
        
        </div>
    </form>
</body>
</html>


Database CS File:


using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Practical_Test_Solved_042
{
    public partial class WebForm1 : System.Web.UI.Page
    {
        public SqlConnection sc=new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=""C:\Users\Preet Patel\Documents\StudentDetails.mdf"";Integrated Security=True;Connect Timeout=30");
        public SqlCommand cmd=new SqlCommand();
        public SqlDataReader sdr;
        protected void Page_Load(object sender, EventArgs e)
        {
            cmd.Connection = sc;
            cmd.CommandText = "StudentPro";
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            if (!IsPostBack)
            {
         
                
                FillGrid();
                FillDropDown();
            }
            
            
        }

        private void FillDropDown()
        {
            try
            {

                sc.Open();
                cmd.Connection = sc;
                cmd.CommandText = "StudentPro";
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.Clear();
                cmd.Parameters.AddWithValue("@op", 4);
                sdr = cmd.ExecuteReader();
                ddlid.Items.Clear();
                while (sdr.Read())
                {
                    ddlid.Items.Add(sdr[0].ToString());
                }
            }
            catch (Exception ex)
            {

                Response.Write(ex.Message);
            }
            finally
            {
                sc.Close();
                //FillGrid();
            }
            
        }

        private void FillGrid()
        {
            try
            {
                sc.Open();
                cmd.Connection = sc;
                cmd.CommandText = "StudentPro";
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.Clear();
                cmd.Parameters.AddWithValue("@op", 5);
                sdr = cmd.ExecuteReader();
                gvstudent.DataSource = sdr;
                gvstudent.DataBind();
                
            }
            catch (Exception ex)
            {

                Response.Write(ex.Message);
            }
            finally
            { 
                sc.Close();
               // FillDropDown();
            }
        }

        protected void btn_Insert_Click(object sender, EventArgs e)
        {
            try
            {
                sc.Open();
                cmd.Parameters.Clear();
                cmd.Connection=sc;
                cmd.CommandText = "StudentPro";
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@id",txt_id.Text);
                cmd.Parameters.AddWithValue("@name",txt_name.Text);
                cmd.Parameters.AddWithValue("@prog",txt_prog.Text);
                cmd.Parameters.AddWithValue("@sem",txt_sem.Text);
                cmd.Parameters.AddWithValue("@sub1",txt_sub1marks.Text);
                cmd.Parameters.AddWithValue("@sub2",txt_sub2marks.Text);
                cmd.Parameters.AddWithValue("@sub3",txt_sub3marks.Text);
                cmd.Parameters.AddWithValue("@op",1);
                int i=cmd.ExecuteNonQuery();
                if (i>0)
                {
                    Response.Write("Record Inserted");
                    txt_id.Text = "";
                    txt_name.Text = "";
                    txt_prog.Text = "";
                    txt_sem.Text = "";
                    txt_sub1marks.Text = "";
                    txt_sub2marks.Text = "";
                    txt_sub3marks.Text = "";
                }
                else
                {
                    Response.Write("Something Went Wrong");
                }
            }
            catch (Exception ex)
            {
                Response.Write(ex.ToString());
            }
            finally
            {
                sc.Close();
                FillGrid();
                FillDropDown();
            }
        }

        protected void btn_Update_Click(object sender, EventArgs e)
        {
            try
            {
                sc.Open();
                cmd.Parameters.Clear();
                //cmd.Connection = sc;
                //cmd.CommandText = "StudentPro";
                //cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@id", ddlid.SelectedItem.ToString());
                cmd.Parameters.AddWithValue("@name", txt_name.Text);
                cmd.Parameters.AddWithValue("@prog", txt_prog.Text);
                cmd.Parameters.AddWithValue("@sem", txt_sem.Text);
                cmd.Parameters.AddWithValue("@sub1", txt_sub1marks.Text);
                cmd.Parameters.AddWithValue("@sub2", txt_sub2marks.Text);
                cmd.Parameters.AddWithValue("@sub3", txt_sub3marks.Text);
                cmd.Parameters.AddWithValue("@op", 2);
                int i = cmd.ExecuteNonQuery();
                if (i > 0)
                {
                    Response.Write("Record Updated");
                    txt_id.Text = "";
                    txt_name.Text = "";
                    txt_prog.Text = "";
                    txt_sem.Text = "";
                    txt_sub1marks.Text = "";
                    txt_sub2marks.Text = "";
                    txt_sub3marks.Text = "";
                }
                else
                {
                    Response.Write("Something Went Wrong");
                }
            }
            catch (Exception ex)
            {
                Response.Write(ex.ToString());
            }
            finally
            {
                sc.Close();
                FillGrid();
                FillDropDown();
            }
        }

        protected void btn_Delete_Click(object sender, EventArgs e)
        {
            try
            {
                sc.Open();
                cmd.Parameters.Clear();
                //cmd.Connection = sc;
                //cmd.CommandText = "StudentPro";
                //cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@id", ddlid.SelectedItem.ToString());
                cmd.Parameters.AddWithValue("@op", 3);
                int i = cmd.ExecuteNonQuery();
                if (i > 0)
                {
                    Response.Write("Record Deleted");
                    txt_id.Text = "";
                    txt_name.Text = "";
                    txt_prog.Text = "";
                    txt_sem.Text = "";
                    txt_sub1marks.Text = "";
                    txt_sub2marks.Text = "";
                    txt_sub3marks.Text = "";
                }
                else
                {
                    Response.Write("Something Went Wrong");
                }
            }
            catch (Exception ex)
            {
                Response.Write(ex.ToString());
            }
            finally
            {
                sc.Close();
                FillGrid();
                FillDropDown();
            }
        }

        protected void ddlid_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        protected void gvstudent_SelectedIndexChanged(object sender, EventArgs e)
        {
           
        }

        protected void gvstudent_OnRowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowIndex>=0)
            {
                if (Convert.ToInt32(e.Row.Cells[4].Text)<50)
                {
                    e.Row.Cells[4].ForeColor = System.Drawing.Color.Red;
                }
                
            }
        }
    }
}

Database Stored Procedure:

CREATE PROCEDURE [dbo].[StudentPro]
	@id varchar(20) = NULL,
	@name varchar(20) = NULL,
	@prog varchar(20) =NULL,
	@sem int =0,
	@sub1 int =0,
	@sub2 int =0,
	@sub3 int =0,
	@op int = 0 --1.ins 2. upd 3.del 4 sel 5. gridfill
AS
	BEGIN
	if @op =1
	INSERT into Student values(@id,@name,@prog,@sem,@sub1,@sub2,@sub3);
	if @op=2
	update student set name=@name,prog=@prog,sem=@sem,sub1mark=@sub1,sub2mark=@sub2,sub3mark=@sub3 where id=@id;
	if @op=3
	delete from student where id=@id;
	if @op=4
	select * from student;
	if @op=5
	select id,name,prog,sem,sub1mark,sub2mark,sub3mark,(sub1mark+sub2mark+sub3mark) AS Total,(sub1mark+sub2mark+sub3mark)/3 AS Per from student;
	END
RETURN 0


Web Service Provider:

[WebMethod]
public int Add(int n1,int n2)
{
    return n1+n2;
}

[WebMethod]
public int Sub(int n1, int n2)
{
    return n1 - n2;
}

[WebMethod]
public int Mul(int n1, int n2)
{
    return n1 * n2;
}
[WebMethod]
public int Div(int n1, int n2)
{
    return n1 / n2;
}


WebService Consumer:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using ServiceConsumer.ServiceReference2;
namespace ServiceConsumer
{
    public partial class WebForm2 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            WebService1SoapClient proxy = new WebService1SoapClient();
            Response.Write(proxy.Add(12, 12));
            Response.Write(proxy.Sub(15, 5));
            Response.Write(proxy.Mul(13, 5));
            Response.Write(proxy.Div(10, 2));
           
        }
    }
}